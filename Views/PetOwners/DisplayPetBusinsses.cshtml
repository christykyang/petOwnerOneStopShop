@model ViewModelServiceOffered

@{
    ViewData["Title"] = "DisplayPetBusinsses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Display Pet Businsses</h1>
<body>
    <div id="map" style="width: 500px; height: 400px;"></div>
    <script type="text/javascript">
        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: new google.maps.LatLng(43.0343, -87.9115)
            });

            var contantInformation = @Html.Raw(Json.Serialize(Model.PetBusinesses.Select(c => new string[]{c.Name, c.IdentityUser.PhoneNumber, c.IdentityUser.Email }).ToArray()));

            var infowindow = new google.maps.InfoWindow();

            var coordinatesArray = @Html.Raw(Json.Serialize(Model.PetBusinesses.Select(a => new double[]{a.Address.Lat, a.Address.Lng}).ToArray()));

            for (var i = 0; i < coordinatesArray.length; i++) {

                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(coordinatesArray[i][0], coordinatesArray[i][1]),
                    map: map
                });

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(contantInformation[i][0] + '<br>' + contantInformation[i][1] + '<br>' + contantInformation[i][2]);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@API_Keys.GeocodeAndGoogleMapsKey&callback=initMap"></script>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PetBusiness.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetBusiness.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetBusiness.BusinessType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Services)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PetBusinesses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address.ZipCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BusinessType)
                    </td>
                        @foreach (var service in Model.ServicesOffered)
                        {
                            <td>
                            @Html.DisplayFor(modelItem => service.Service.ServiceName)
                            </td>
                        }
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>