// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawentsOneStopShop.Data;

namespace PawentsOneStopShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200501064640_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "56d7e1f8-969d-4ff5-b003-18a94ec619af",
                            ConcurrencyStamp = "2b9efd1a-dbff-4a50-a1bf-19af3443790d",
                            Name = "Pet Owner",
                            NormalizedName = "PET OWNER"
                        },
                        new
                        {
                            Id = "10a28e6a-8a2c-4627-952f-92f813175bff",
                            ConcurrencyStamp = "f0a84f39-ad7d-4a03-9de6-61e4bbc49997",
                            Name = "Pet-Friendly Business",
                            NormalizedName = "PET-FRIENDLY BUSINESS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Adoptable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PetBusinessId")
                        .HasColumnType("int");

                    b.Property<int?>("PetProfileId")
                        .HasColumnType("int");

                    b.Property<bool?>("isAdoptable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PetBusinessId");

                    b.HasIndex("PetProfileId");

                    b.ToTable("Adoptable");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.BusinessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeOfBusiness = "Pet Sitting"
                        },
                        new
                        {
                            Id = 2,
                            TypeOfBusiness = "Pet Training"
                        },
                        new
                        {
                            Id = 3,
                            TypeOfBusiness = "Pet Boarding"
                        },
                        new
                        {
                            Id = 4,
                            TypeOfBusiness = "Veterinarian"
                        },
                        new
                        {
                            Id = 5,
                            TypeOfBusiness = "Grooming"
                        },
                        new
                        {
                            Id = 6,
                            TypeOfBusiness = "Pet Transportation"
                        },
                        new
                        {
                            Id = 7,
                            TypeOfBusiness = "Pet Supply"
                        },
                        new
                        {
                            Id = 8,
                            TypeOfBusiness = "Food Manufacture"
                        },
                        new
                        {
                            Id = 9,
                            TypeOfBusiness = "Pet Cafe"
                        },
                        new
                        {
                            Id = 10,
                            TypeOfBusiness = "Pet-Friendly Restuarants"
                        },
                        new
                        {
                            Id = 11,
                            TypeOfBusiness = "Pet-Friendly Stores"
                        },
                        new
                        {
                            Id = 17,
                            TypeOfBusiness = "Kibble"
                        });
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.FeedUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetBusinessId")
                        .HasColumnType("int");

                    b.Property<string>("PubDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PetBusinessId");

                    b.ToTable("FeedUpdate");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Follow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFollowing")
                        .HasColumnType("bit");

                    b.Property<int?>("PetBusinessId")
                        .HasColumnType("int");

                    b.Property<int?>("PetOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetBusinessId");

                    b.HasIndex("PetOwnerId");

                    b.ToTable("Follow");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MessageContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserFromID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserToId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("ObjectCalendar");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectCalendarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObjectCalendarId");

                    b.ToTable("ObjectEvent");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectInvite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ObjectEventId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerInvitedId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerSendingId")
                        .HasColumnType("int");

                    b.Property<bool?>("isInvitationAccepted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ObjectEventId");

                    b.ToTable("ObjectInvite");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("PetBusiness");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("PetOwner");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PetOwnerId");

                    b.HasIndex("PetTypeId");

                    b.ToTable("PetProfile");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Fish"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Bird"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Small Pet"
                        },
                        new
                        {
                            Id = 6,
                            TypeName = "Reptile"
                        },
                        new
                        {
                            Id = 7,
                            TypeName = "Amphibian"
                        },
                        new
                        {
                            Id = 8,
                            TypeName = "Farm Animal"
                        });
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServiceName = "Bathing"
                        },
                        new
                        {
                            Id = 2,
                            ServiceName = "Grooming"
                        },
                        new
                        {
                            Id = 3,
                            ServiceName = "Training"
                        },
                        new
                        {
                            Id = 4,
                            ServiceName = "Boarding"
                        },
                        new
                        {
                            Id = 5,
                            ServiceName = "Swimming Facilities"
                        },
                        new
                        {
                            Id = 6,
                            ServiceName = "Spay and Neuter"
                        },
                        new
                        {
                            Id = 7,
                            ServiceName = "Vaccines"
                        },
                        new
                        {
                            Id = 8,
                            ServiceName = "Physical Theraphy"
                        },
                        new
                        {
                            Id = 9,
                            ServiceName = "Raw Food"
                        },
                        new
                        {
                            Id = 10,
                            ServiceName = "Socialization"
                        },
                        new
                        {
                            Id = 11,
                            ServiceName = "Exercise"
                        },
                        new
                        {
                            Id = 12,
                            ServiceName = "Supplies"
                        },
                        new
                        {
                            Id = 13,
                            ServiceName = "Transportation"
                        },
                        new
                        {
                            Id = 14,
                            ServiceName = "Animal/Pet Educational Resources"
                        },
                        new
                        {
                            Id = 15,
                            ServiceName = "Self-Bathing Service"
                        },
                        new
                        {
                            Id = 16,
                            ServiceName = "Volunteering"
                        });
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ServiceOffered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PetBusinessId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceOffered");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Adoptable", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.PetBusiness", "PetBusiness")
                        .WithMany()
                        .HasForeignKey("PetBusinessId");

                    b.HasOne("PawentsOneStopShop.Models.PetProfile", "PetProfile")
                        .WithMany()
                        .HasForeignKey("PetProfileId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.FeedUpdate", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.PetBusiness", "PetBusiness")
                        .WithMany()
                        .HasForeignKey("PetBusinessId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.Follow", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.PetBusiness", "PetBusiness")
                        .WithMany()
                        .HasForeignKey("PetBusinessId");

                    b.HasOne("PawentsOneStopShop.Models.PetOwner", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectCalendar", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectEvent", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.ObjectCalendar", "ObjectCalendar")
                        .WithMany()
                        .HasForeignKey("ObjectCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ObjectInvite", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.ObjectEvent", "ObjectEvent")
                        .WithMany()
                        .HasForeignKey("ObjectEventId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetBusiness", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("PawentsOneStopShop.Models.BusinessType", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetOwner", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.PetProfile", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.PetOwner", "PetOwner")
                        .WithMany()
                        .HasForeignKey("PetOwnerId");

                    b.HasOne("PawentsOneStopShop.Models.PetType", "PetType")
                        .WithMany()
                        .HasForeignKey("PetTypeId");
                });

            modelBuilder.Entity("PawentsOneStopShop.Models.ServiceOffered", b =>
                {
                    b.HasOne("PawentsOneStopShop.Models.PetBusiness", "PetBusiness")
                        .WithMany()
                        .HasForeignKey("PetBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawentsOneStopShop.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
